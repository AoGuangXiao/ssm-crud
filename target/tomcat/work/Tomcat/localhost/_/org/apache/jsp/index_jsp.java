/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2020-12-22 10:43:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    pageContext.setAttribute("APP_PATH", request.getContextPath());

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>员工列表</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- web路径：\r\n");
      out.write("     不以/开头的相对路径，找资源时以当前资源的路径为基准，经常由于各种跳转而出现问题。\r\n");
      out.write("     以/开头的(相对路径)?找资源时以服务器的路径为基准(http://localhost:8080)，需要加上项目名\r\n");
      out.write("                    http://localhost:8080/ssm-crud\r\n");
      out.write("     -->\r\n");
      out.write("    <!-- 引入前端框架时，type属性和rel属性一定要写对，否则下面的标签会失效！！！！！！！！！ -->\r\n");
      out.write("    <!-- 引入jQuery -->\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("static/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("    <!-- 引入样式 -->\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("static/bootstrap-3.3.7-dist/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 修改用户的弹窗Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"empUpdateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                <h4 class=\"modal-title\">员工修改</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form class=\"form-horizontal\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">empName</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <p class=\"form-control-static\" id=\"emp_update_static\"></p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">email</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"text\" name=\"email\" class=\"form-control\" id=\"email_update_input\" placeholder=\"xxxx@agx.com\">\r\n");
      out.write("                            <span class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" value=\"m\" checked=\"checked\"> 男\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" value=\"w\"> 女\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">deptName</label>\r\n");
      out.write("                        <div class=\"col-sm-4\">\r\n");
      out.write("                            <select class=\"form-control\" name=\"dId\">\r\n");
      out.write("                                <!-- 提交部门id即可 -->\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"emp_update_btn\">Update</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 添加用户的弹窗Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"empAddModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                <h4 class=\"modal-title\" id=\"myModalLabel\">员工添加</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form class=\"form-horizontal\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">empName</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"text\" name=\"empName\" class=\"form-control\" id=\"empName_add_input\" placeholder=\"请输入用户名\">\r\n");
      out.write("                            <span class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">email</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"text\" name=\"email\" class=\"form-control\" id=\"email_add_input\" placeholder=\"xxxx@agx.com\">\r\n");
      out.write("                            <span class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender_add_radio1\" value=\"m\" checked=\"checked\"> 男\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender_add_radio2\" value=\"w\"> 女\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">deptName</label>\r\n");
      out.write("                        <div class=\"col-sm-4\">\r\n");
      out.write("                            <select class=\"form-control\" name=\"dId\">\r\n");
      out.write("                                <!-- 提交部门id即可 -->\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"emp_save_btn\">Save changes</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 搭建显示页面 -->\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <!-- 标题 -->\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <h1>SSM-CRUD</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- 按钮 -->\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-4 col-md-offset-10\">\r\n");
      out.write("            <button class=\"btn btn-primary\" id=\"emp_add_modal_btn\">新增</button>\r\n");
      out.write("            <button class=\"btn btn-danger\" id=\"emp_delete_all_btn\">删除</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <br/>\r\n");
      out.write("    <!-- 显示表格数据 -->\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <table class=\"table table-hover\" id=\"emps_table\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>\r\n");
      out.write("                        <input type=\"checkbox\" id=\"check_all\"/>\r\n");
      out.write("                    </th>\r\n");
      out.write("                    <th>#</th>\r\n");
      out.write("                    <th>empName</th>\r\n");
      out.write("                    <th>gender</th>\r\n");
      out.write("                    <th>Email</th>\r\n");
      out.write("                    <th>部门名称</th>\r\n");
      out.write("                    <th>操作</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 显示分页信息 -->\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <!-- 分页文字信息 -->\r\n");
      out.write("        <div class=\"col-md-6\" id=\"page_info_area\"></div>\r\n");
      out.write("        <!-- 分页条信息 -->\r\n");
      out.write("        <div class=\"col-md-6 col-md-offset-8\" id=\"page_nav_area\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    //定义一个全局属性用于操作之后显示最后一页数据\r\n");
      out.write("    var totalRecord,currentPage;\r\n");
      out.write("\r\n");
      out.write("    //1.页面加载完成之后，直接发送ajax请求，获取到分页信息\r\n");
      out.write("    $(function () {\r\n");
      out.write("        to_page(1);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function to_page(pn) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emps\",\r\n");
      out.write("            data:\"pn=\"+pn,\r\n");
      out.write("            type:\"GET\",\r\n");
      out.write("            success:function (result) {\r\n");
      out.write("                //console.log(result);\r\n");
      out.write("                //1.解析并显示员工数据\r\n");
      out.write("                build_emp_table(result);\r\n");
      out.write("                //2.解析并显示分页信息\r\n");
      out.write("                build_page_info(result);\r\n");
      out.write("                //3.解析并显示分页条信息\r\n");
      out.write("                build_page_nav(result);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //1.解析并显示员工数据\r\n");
      out.write("    function build_emp_table(result) {\r\n");
      out.write("        //每次发送ajax请求先进行清空\r\n");
      out.write("        $(\"#emps_table tbody\").empty();\r\n");
      out.write("        var emps = result.map.pageInfo.list;\r\n");
      out.write("        $.each(emps, function (index,item) {\r\n");
      out.write("            var checkBoxTd = $(\"<td><input type='checkbox' class='check_item'/></td>\");\r\n");
      out.write("            var empIdTd = $(\"<td></td>\").append(item.empId);\r\n");
      out.write("            var empNameTd = $(\"<td></td>\").append(item.empName);\r\n");
      out.write("            var genderTd = $(\"<td></td>\").append(item.gender=='m'?\"男\":\"女\");\r\n");
      out.write("            var emailTd = $(\"<td></td>\").append(item.email);\r\n");
      out.write("            var departmentTd = $(\"<td></td>\").append(item.department.deptName);\r\n");
      out.write("            var edit_btn = $(\"<button></button>\").addClass(\"btn btn-primary btn-sm edit_btn\")\r\n");
      out.write("                            .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\")).append(\" 编辑\")\r\n");
      out.write("            //为编辑按钮添加一个自定义的属性，来表示当前员工id\r\n");
      out.write("            edit_btn.attr(\"empId\",item.empId);\r\n");
      out.write("            var delete_btn = $(\"<button></button>\").addClass(\"btn btn-danger btn-sm delete_btn\")\r\n");
      out.write("                            .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\")).append(\" 删除\");\r\n");
      out.write("            //为删除按钮添加一个自定义的属性，来表示当前员工id\r\n");
      out.write("            delete_btn.attr(\"empId\",item.empId);\r\n");
      out.write("            var btnTd = $(\"<td></td>\").append(edit_btn).append(\" \").append(delete_btn);\r\n");
      out.write("            //append()方法执行完成之后还是返回原来地元素，所以可以进行链式操作\r\n");
      out.write("            $(\"<tr></tr>\").append(checkBoxTd)\r\n");
      out.write("                .append(empIdTd)\r\n");
      out.write("                .append(empNameTd)\r\n");
      out.write("                .append(genderTd)\r\n");
      out.write("                .append(emailTd)\r\n");
      out.write("                .append(departmentTd)\r\n");
      out.write("                .append(btnTd)\r\n");
      out.write("                .appendTo(\"#emps_table tbody\");\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //2.解析并显示分页信息\r\n");
      out.write("    function build_page_info(result) {\r\n");
      out.write("        //每次发送ajax请求先进行清空\r\n");
      out.write("        $(\"#page_info_area\").empty();\r\n");
      out.write("        $(\"#page_info_area\").append(\"当前第\"+result.map.pageInfo.pageNum+\"页，总共\"+\r\n");
      out.write("                                result.map.pageInfo.pages+\"页，共\"+result.map.pageInfo.total+\"条记录\");\r\n");
      out.write("        totalRecord = result.map.pageInfo.total;\r\n");
      out.write("        currentPage = result.map.pageInfo.pageNum;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //3.解析并显示分页条信息\r\n");
      out.write("    function build_page_nav(result) {\r\n");
      out.write("        //每次发送ajax请求先进行清空\r\n");
      out.write("        $(\"#page_nav_area\").empty();\r\n");
      out.write("        //构建元素\r\n");
      out.write("        var ul = $(\"<ul></ul>\").addClass(\"pagination\");\r\n");
      out.write("\r\n");
      out.write("        var firstPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"首页\").attr(\"href\",\"#\"));\r\n");
      out.write("        var prePageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&laquo;\").attr(\"href\",\"#\"));\r\n");
      out.write("        if(!result.map.pageInfo.hasPreviousPage){\r\n");
      out.write("            firstPageLi.addClass(\"disabled\");\r\n");
      out.write("            prePageLi.addClass(\"disabled\");\r\n");
      out.write("        }else {\r\n");
      out.write("            //为元素添加点击翻页的事件\r\n");
      out.write("            firstPageLi.click(function () {\r\n");
      out.write("                to_page(1);\r\n");
      out.write("            });\r\n");
      out.write("            prePageLi.click(function () {\r\n");
      out.write("                to_page(result.map.pageInfo.pageNum -1);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var nextPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&raquo;\").attr(\"href\",\"#\"));\r\n");
      out.write("        var lastPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"末页\").attr(\"href\",\"#\"));\r\n");
      out.write("        if(!result.map.pageInfo.hasNextPage){\r\n");
      out.write("            nextPageLi.addClass(\"disabled\");\r\n");
      out.write("            lastPageLi.addClass(\"disabled\");\r\n");
      out.write("        }else {\r\n");
      out.write("            nextPageLi.click(function () {\r\n");
      out.write("                to_page(result.map.pageInfo.pageNum + 1);\r\n");
      out.write("            });\r\n");
      out.write("            lastPageLi.click(function () {\r\n");
      out.write("                to_page(result.map.pageInfo.pages);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //添加首页和前一页地标签\r\n");
      out.write("        ul.append(firstPageLi).append(prePageLi);\r\n");
      out.write("\r\n");
      out.write("        //遍历获取连续地页码并添加到 ul 中\r\n");
      out.write("        $.each(result.map.pageInfo.navigatepageNums,function (index,item) {\r\n");
      out.write("            var numLi = $(\"<li></li>\").append($(\"<a></a>\").append(item).attr(\"href\",\"#\"));\r\n");
      out.write("            if(result.map.pageInfo.pageNum == item){\r\n");
      out.write("                numLi.addClass(\"active\");\r\n");
      out.write("            }\r\n");
      out.write("            numLi.click(function () {\r\n");
      out.write("                to_page(item);\r\n");
      out.write("            });\r\n");
      out.write("            ul.append(numLi);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //添加下一页和末页的标签\r\n");
      out.write("        ul.append(nextPageLi).append(lastPageLi);\r\n");
      out.write("        //创建nav标签\r\n");
      out.write("        var nav = $(\"<nav></nav>\").append(ul).appendTo($(\"#page_nav_area\"));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //清空表单数据及所有显示样式\r\n");
      out.write("    function reset_form(ele){\r\n");
      out.write("        //清空表单数据可以使用Dom对象的reset()方法\r\n");
      out.write("        $(ele)[0].reset();\r\n");
      out.write("        //清空所有样式\r\n");
      out.write("        $(ele).find(\"*\").removeClass(\"has-error has-success\");\r\n");
      out.write("        $(ele).find(\".help-block\").text(\"\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //点击新增按钮弹出模态框\r\n");
      out.write("    $(\"#emp_add_modal_btn\").click(function () {\r\n");
      out.write("        /*//查询部门之前先清空下拉列表的数据\r\n");
      out.write("        $(\"#empAddModal select\").empty();\r\n");
      out.write("        //清空表单数据\r\n");
      out.write("        $(\"#empName_add_input\").val(\"\");\r\n");
      out.write("        $(\"#email_add_input\").val(\"\");*/\r\n");
      out.write("\r\n");
      out.write("        //清空表单数据\r\n");
      out.write("        reset_form(\"#empAddModal form\");\r\n");
      out.write("        //发送ajax请求，查出部门信息，显示在下拉列表中\r\n");
      out.write("        getDepts(\"#empAddModal select\");\r\n");
      out.write("\r\n");
      out.write("        //弹出模态框\r\n");
      out.write("        $(\"#empAddModal\").modal({\r\n");
      out.write("                backdrop:\"static\"\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //查询所有部门信息显示在下拉列表中\r\n");
      out.write("    function getDepts(ele) {\r\n");
      out.write("        //查询部门之前先清空下拉列表的数据\r\n");
      out.write("        $(ele).empty();\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/depts\",\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("            success:function (result) {\r\n");
      out.write("                //显示部门信息在下拉列表中\r\n");
      out.write("                //$(\"#empAddModal select\").append();\r\n");
      out.write("                $.each(result.map.depts,function () {\r\n");
      out.write("                    var optionElement = $(\"<option></option>\").append(this.deptName).attr(\"value\",this.deptId);\r\n");
      out.write("                    $(ele).append(optionElement);\r\n");
      out.write("                })\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //表单数据格式校验\r\n");
      out.write("    function validate_add_form(){\r\n");
      out.write("        //1.拿到要校验的数据，使用正则表达式进行校验\r\n");
      out.write("        var empName = $(\"#empName_add_input\").val();\r\n");
      out.write("        var regName = /(^[a-zA-Z0-9_-]{4,16}$)|(^[\\u2E80-\\u9FFF]{2,5})/;\r\n");
      out.write("        if(!regName.test(empName)){\r\n");
      out.write("            // alert(\"用户名必须是4-16位的字母或者2-5位的汉字\");\r\n");
      out.write("            show_validate_msg(\"#empName_add_input\",\"error\",\"用户名必须是4-16位的字母或者2-5位的汉字\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }else {\r\n");
      out.write("            show_validate_msg(\"#empName_add_input\",\"success\",\"\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //2.校验邮箱\r\n");
      out.write("        var email = $(\"#email_add_input\").val();\r\n");
      out.write("        var regEmail = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{3,10})$/;\r\n");
      out.write("        if(!regEmail.test(email)){\r\n");
      out.write("            // alert(\"邮箱格式不正确！\");\r\n");
      out.write("            show_validate_msg(\"#email_add_input\",\"error\",\"邮箱格式不正确\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }else{\r\n");
      out.write("            show_validate_msg(\"#email_add_input\",\"success\",\"\");\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //表单数据内容校验\r\n");
      out.write("    //给输入框注册变更事件校验用户名是否可用\r\n");
      out.write("    $(\"#empName_add_input\").change(function () {\r\n");
      out.write("        //发送Ajax请求判断用户名是否可用\r\n");
      out.write("        var empName = this.value;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/checkUser\",\r\n");
      out.write("            data: \"empName=\"+empName,\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                if(result.code==100){\r\n");
      out.write("                    show_validate_msg(\"#empName_add_input\",\"success\",result.map.validate_msg);\r\n");
      out.write("                    $(\"#emp_save_btn\").attr(\"ajax-validate\",\"success\");\r\n");
      out.write("                }else{\r\n");
      out.write("                    show_validate_msg(\"#empName_add_input\",\"error\",result.map.validate_msg);\r\n");
      out.write("                    $(\"#emp_save_btn\").attr(\"ajax-validate\",\"error\");\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //优化显示校验结果\r\n");
      out.write("    function show_validate_msg(ele, status,msg){\r\n");
      out.write("        //清楚当前元素的验证状态\r\n");
      out.write("        $(ele).parent().removeClass(\"has-success has-error\");\r\n");
      out.write("        $(ele).next(\"span\").text(\"\");\r\n");
      out.write("        //判断验证结果信息进行显示\r\n");
      out.write("        if(status == \"success\"){\r\n");
      out.write("            $(ele).parent().addClass(\"has-success\");\r\n");
      out.write("            $(ele).next(\"span\").text(msg);\r\n");
      out.write("        }else if(status == \"error\"){\r\n");
      out.write("            $(ele).parent().addClass(\"has-error\");\r\n");
      out.write("            $(ele).next(\"span\").text(msg);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //给添加员工模块的新增按钮注册点击事件\r\n");
      out.write("    $(\"#emp_save_btn\").click(function () {\r\n");
      out.write("        //1.先对填写的数据进行格式校验\r\n");
      out.write("        if(!validate_add_form()){\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        //再对数据进行内容校验\r\n");
      out.write("        if($(this).attr(\"ajax-validate\")==\"error\"){\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        //3.发送Ajax请求将模态框中填写的数据提交到服务器进行保存\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            data: $(\"#empAddModal form\").serialize(),\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                if(result.code == 100){\r\n");
      out.write("                    //关闭添加员工模块\r\n");
      out.write("                    $(\"#empAddModal\").modal(\"hide\");\r\n");
      out.write("                    //弹窗显示操作结果\r\n");
      out.write("                    alert(result.message);\r\n");
      out.write("                    //发送完Ajax请求后显示最后一页数据\r\n");
      out.write("                    to_page(totalRecord);\r\n");
      out.write("                }else {\r\n");
      out.write("                    //显示失败信息\r\n");
      out.write("                    if(undefined != result.map.errorFields.email){\r\n");
      out.write("                        show_validate_msg(\"#email_add_input\",\"error\",result.map.errorFields.email);\r\n");
      out.write("                    }\r\n");
      out.write("                    if(undefined != result.map.errorFields.empName){\r\n");
      out.write("                        show_validate_msg(\"#empName_add_input\",\"error\",result.map.errorFields.empName);\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //为删除按钮绑定点击事件\r\n");
      out.write("    $(document).on(\"click\",\".delete_btn\",function () {\r\n");
      out.write("        //获取用户姓名\r\n");
      out.write("        var empName = $(this).parents(\"tr\").find(\"td:eq(2)\").text();\r\n");
      out.write("        var empId = $(this).attr(\"empId\");\r\n");
      out.write("        //弹出确认删除对话框\r\n");
      out.write("        if(confirm(\"确认删除【\"+ empName +\"】吗？\")){\r\n");
      out.write("            //确认之后发送Ajax请求进行删除\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+empId,\r\n");
      out.write("                type: \"DELETE\",\r\n");
      out.write("                success: function (result) {\r\n");
      out.write("                    //显示操作结果\r\n");
      out.write("                    alert(result.message);\r\n");
      out.write("                    //跳转到当前页\r\n");
      out.write("                    to_page(currentPage);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //点击编辑按钮弹出修改模态框\r\n");
      out.write("    //这里是在按钮创建之前就绑定了click，所有绑不上\r\n");
      out.write("    //1)可以在按钮创建时绑定，但是耦合太高了。2)绑定点击.live()\r\n");
      out.write("    //jQuery新版没有live()方法，用on()代替\r\n");
      out.write("    $(document).on(\"click\",\".edit_btn\",function () {\r\n");
      out.write("        //查询员工信息并显示\r\n");
      out.write("        getEmp($(this).attr(\"empId\"));\r\n");
      out.write("        //将员工id传递给更新按钮\r\n");
      out.write("        $(\"#emp_update_btn\").attr(\"empId\", $(this).attr(\"empId\"));\r\n");
      out.write("        //查询部门信息并显示\r\n");
      out.write("        getDepts(\"#empUpdateModal select\");\r\n");
      out.write("        //弹出模态框\r\n");
      out.write("        $(\"#empUpdateModal\").modal({\r\n");
      out.write("            backdrop:\"static\"\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //查询员工信息\r\n");
      out.write("    function getEmp(id) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+id,\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                var emp = result.map.employee;\r\n");
      out.write("                $(\"#emp_update_static\").text(emp.empName);\r\n");
      out.write("                $(\"#email_update_input\").val(emp.email);\r\n");
      out.write("                $(\"#empUpdateModal input[name=gender]\").val([emp.gender]);\r\n");
      out.write("                $(\"#empUpdateModal select\").val([emp.dId]);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //更新员工信息\r\n");
      out.write("    $(\"#emp_update_btn\").click(function () {\r\n");
      out.write("        //1.验证邮箱格式是否正确\r\n");
      out.write("        var email = $(\"#email_update_input\").val();\r\n");
      out.write("        var regEmail = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{3,10})$/;\r\n");
      out.write("        if(!regEmail.test(email)){\r\n");
      out.write("            show_validate_msg(\"#email_update_input\",\"error\",\"邮箱格式不正确\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }else{\r\n");
      out.write("            show_validate_msg(\"#email_update_input\",\"success\",\"\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //2.发送ajax请求保存更新的员工数据\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+$(this).attr(\"empId\"),\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            data: $(\"#empUpdateModal form\").serialize()+\"&_method=PUT\",\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                if(result.code == 100){\r\n");
      out.write("                    //关闭修改员工模块\r\n");
      out.write("                    $(\"#empUpdateModal\").modal(\"hide\");\r\n");
      out.write("                    //显示结果信息\r\n");
      out.write("                    alert(result.map.message);\r\n");
      out.write("                    //跳转到当前页面\r\n");
      out.write("                    to_page(currentPage);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //完成全选/全不选\r\n");
      out.write("    $(\"#check_all\").click(function () {\r\n");
      out.write("        //attr()获取checked是undefined，所有一般用attr()获取自定义的属性\r\n");
      out.write("        //可以使用prop()获取dom原生属性的值\r\n");
      out.write("        $(\".check_item\").prop(\"checked\",$(this).prop(\"checked\"));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //check_item\r\n");
      out.write("    $(document).on(\"click\",\".check_item\",function () {\r\n");
      out.write("        //判断当前选中的元素是否为5个\r\n");
      out.write("        var flag = $(\".check_item:checked\").length == $(\".check_item\").length;\r\n");
      out.write("        //将上方的判断值赋给check_all复选框即可\r\n");
      out.write("        $(\"#check_all\").prop(\"checked\",flag);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //点击全部删除，批量删除用户\r\n");
      out.write("    $(\"#emp_delete_all_btn\").click(function () {\r\n");
      out.write("        //保存选中的用户名\r\n");
      out.write("        var empNames = \"\";\r\n");
      out.write("        //保存选中的用户ID\r\n");
      out.write("        var empIDs = \"\";\r\n");
      out.write("        $.each($(\".check_item:checked\"),function () {\r\n");
      out.write("           empNames += $(this).parents(\"tr\").find(\"td:eq(2)\").text()+\",\";\r\n");
      out.write("           empIDs += $(this).parents(\"tr\").find(\"td:eq(1)\").text()+\"-\";\r\n");
      out.write("        });\r\n");
      out.write("        //去除多余的逗号和\"-\"\r\n");
      out.write("        empNames = empNames.substring(0,empNames.length-1);\r\n");
      out.write("        empIDs = empIDs.substring(0,empNames.length-1);\r\n");
      out.write("        if(confirm(\"确认删除[\"+ empNames +\"]吗？\")){\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+empIDs,\r\n");
      out.write("                type: \"DELETE\",\r\n");
      out.write("                success: function (result) {\r\n");
      out.write("                    //显示结果信息\r\n");
      out.write("                    alert(result.message);\r\n");
      out.write("                    //跳转到当前页\r\n");
      out.write("                    to_page(currentPage);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
